<%
  use Gitprep::API;
  
  # API
  my $api = Gitprep::API->new($self);
  
  # Paramters
  my $project = param('project');
  my $root_ns = $api->root_ns(config->{root});
  my $rep_ns = "$root_ns/$user/$project.git";
  my $rep = "/$rep_ns";
  my $home_ns = $api->dirname($project);
  my $home = "/$home_ns";
  my $diff = param('diff');
  my ($from_id, $id) = $diff =~ /(.+)\.\.(.+)/;
  $id = $diff unless defined $id;
  
  # Git
  my $git = app->git;
  
  # Commit
  my $commit = $git->parse_commit($rep, $id)
    or $api->croak('Unknown commit object');
  my $author_date
    = $git->parse_date($commit->{author_epoch}, $commit->{author_tz});
  my $committer_date
    = $git->parse_date($commit->{committer_epoch}, $commit->{committer_tz});
  $commit->{author_date} = $git->timestamp($author_date);
  $commit->{committer_date} = $git->timestamp($committer_date);
  $from_id = $commit->{parent} unless defined $from_id;

  # Diff tree
  my $difftrees = $git->difftree($rep,
    $id, $commit->{parent}, $commit->{parents});
  
  # Get blob diffs (command "git diff-tree")
  my $blobdiffs = $git->blobdiffs($rep, $from_id, $id, $difftrees);
  
  # Render
  stash(
    home => $home,
    home_ns => $home_ns,
    project => $project,
    project => $project,
    from_id => $from_id,
    id => $id,
    commit => $commit,
  );
%>

% layout 'common';
  %= include '/css/common';
    
  %= stylesheet begin
    .commit_header {
      border:1px solid #c5d5dd;
      border-radius:4px;
      margin:10px 0;
      padding:0;
    }
    .commit_header .htop {
      padding:8px;
      padding-bottom:0;
      margin-bottom:0;
      background-color:#e6f1f6;
      overflow:hidden;
    }
    .commit_header .htitle {
      float:left;
      font-weight:bold;
      font-size:120%;
      padding-top:2px;
    }
    .commit_header .hcode {
      float:right;
      border:1px solid #c5d5dd;
      border-radius:2px;
      padding:4px;
    }
    .commit_header .hcomment {
      background-color:#e6f1f6;
      border-bottom:1px solid #c5d5dd;
      padding-left:8px;
      padding-bottom:10px;
      color:gray;
    }
    .commit_header .hbottom {
      padding:8px;
      overflow:hidden;
    }
    .commit_header .hbottom_left {
      float:left;
    }
    .commit_header .hauthor {
      font-weight:bold;
    }
    .commit_header .hdate {
      color:#999;
    }
    .commit_header .hbottom_right {
      float:right;
    }
  % end
  
  %= include '/include/header', title => 'Commit diff', project => $project;

  <div class="main_panel">
    %= include '/include/sub_header';
    
    %= include '/include/code_menu';
    %= stylesheet begin
      /* Code menu */
      .code_menu_commits {
        border:1px solid #E5E5E5;
        border-bottom:none;
        background-color:white;
        font-weight:bold;
      }
      .code_menu_commits a {
        color:#333
      }
    % end

    <div class="commit_header">
      <div class="htop">
        <div class="htitle">
          <%= $commit->{title_short} %>
          % unless ($commit->{title_short} eq $commit->{title}) {
            ...
          % }
        </div>
        <div class="hcode">
          <a class="ubar" style="color:blue" href="<%= url_for("/$user/$project/tree/$commit->{id}") %>">
            Browse code
          </a>          
        </div>
      </div>
      <div class="hcomment">
        % for (my $i = 0; $i < @{$commit->{comment}}; $i++) {
          % my $comment = $commit->{comment}[$i];
          % if ($i == 0) {
            % $comment =~ s/^\Q$commit->{title_short}//;
          % }
          % if ($comment ne '') {
            <p><%= $comment %></p>
          % }
        % }
      </div>
      <div class="hbottom">
        <div class="hbottom_left">
          <span class="hauthor"><%= $commit->{author_name} %></span>
          <span class="hdate">authored <%= $commit->{age_string_age} %></span>
        </div>
        <div class="hbottom_right">
          % my $parent = $commit->{parent};
          % my $parents = $commit->{parents};
          
          % if (!defined $parent) {
            0 <span style="color:#999">parent</span>
          % } elsif (@$parents == 1) {
            1 <span style="color:#999">parent</span>
            <a style="color:gray" class="ubar" href="<%= url_for("/$user/$project/commit/$parent") %>">
              <%= substr($parent, 0, 7) %>
            </a>
          % } else {
            <%= @$parents %> <span style="color:#999">parents</span>:
            % for my $parent (@$parents) {
              <a style="color:gray" class="ubar" href="<%= url_for("/$user/$project/commit/$parent") %>">
                <%= substr($parent, 0, 7) %>
              </a>
            % }
          % }
          
          <span style="color:#999">commit</span> <%= $commit->{id} %>
        </div>
      </div>
    </div>
    
    <div style="margin-top:10px;margin-bottom:10px;">
      <%= include '/include/difftree', id => $commit->{id}, from_id => $commit->{parent},
        difftrees => $difftrees, parents => $commit->{parents}, project_ns => $project %>
    </div>
    
    <div class="patchset">
      % for (my $i = 0; $i < @$blobdiffs; $i++) {
        % my $blob_diff = $blobdiffs->[$i];
        <div class="patch" id="<%= $i + 1 %>">
          % my $lines = $blob_diff->{lines};
          % my $file = $blob_diff->{file};
          % my $from_file = $blob_diff->{from_file};
          % $from_file = $file unless defined $from_file;
          % my $status = $blob_diff->{status};
          %= include '/include/blobdiff_body', file => $file, from_file => $from_file, status => $status, lines => $blob_diff->{lines}, project_ns => $project;
        </div>
      % }
    </div>
  </div>
  
  %= include '/include/footer';
