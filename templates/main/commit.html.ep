<%
  use Gitprep::API;
  
  # API
  my $api = Gitprep::API->new($self);
  
  # Paramters
  my $project = param('project');
  my $root_ns = $api->root_ns(config->{root});
  my $rep_ns = "$root_ns/$user/$project.git";
  my $rep = "/$rep_ns";
  my $home_ns = $api->dirname($project);
  my $home = "/$home_ns";
  my $diff = param('diff');
  my ($from_id, $id) = $diff =~ /(.+)\.\.(.+)/;
  $id = $diff unless defined $id;
  
  # Git
  my $git = app->git;
  
  # Commit
  my $commit = $git->parse_commit($rep, $id)
    or $api->croak('Unknown commit object');
  my $author_date
    = $git->parse_date($commit->{author_epoch}, $commit->{author_tz});
  my $committer_date
    = $git->parse_date($commit->{committer_epoch}, $commit->{committer_tz});
  $commit->{author_date} = $git->timestamp($author_date);
  $commit->{committer_date} = $git->timestamp($committer_date);
  $from_id = $commit->{parent} unless defined $from_id;

  # Diff tree
  my $difftrees = $git->difftree($rep,
    $id, $commit->{parent}, $commit->{parents});
  
  # Get blob diffs (command "git diff-tree")
  my $blobdiffs = $git->blobdiffs($rep, $from_id, $id, $difftrees);
  
  # Render
  stash(
    home => $home,
    home_ns => $home_ns,
    project => $project,
    project => $project,
    from_id => $from_id,
    id => $id,
    commit => $commit,
  );
%>

% layout 'common';
  
  %= include '/include/header', title => 'Commit diff', project => $project;

  <div class="container">
    %= include '/include/project_header';
    %= include '/include/code_menu', display => 'commits';

    <div class="row" style="margin-bottom:10px">
      <div class="span12 bk-blue-light vpadding5 border-gray" style="border-bottom:none">
        <div class="row">
          <div class="span8">
            <div class="space5"></div>
            <b>
              <big>
                <%= $commit->{title_short} %>
                % unless ($commit->{title_short} eq $commit->{title}) {
                  ...
                % }
              </big>
            </b>
            % for (my $i = 0; $i < @{$commit->{comment}}; $i++) {
              % my $comment = $commit->{comment}[$i];
              % if ($i == 0) {
                % $comment =~ s/^\Q$commit->{title_short}//;
              % }
              % if ($comment ne '') {
                <div>
                  <div class="space5"></div>
                  <%= $comment %>
                </div>
              % }
            % }
          </div>
          <div class="span4 text-right">
            <a class="btn btn-primary" href="<%= url_for("/$user/$project/tree/$commit->{id}") %>">
              Browse code
            </a>
            <div class="space5"></div>
          </div>
        </div>
      </div>
      <div class="span12 border-gray vpadding5" style="border-bottom:none">
        <div class="space5"></div>
        <span><%= $commit->{author_name} %></span>
        <span class="muted">authored <%= $commit->{age_string_age} %></span>
      </div>
      <div class="span12 border-gray vpadding5" style="padding-top:0;border-top:none">
        % my $parent = $commit->{parent};
        % my $parents = $commit->{parents};
        
        <div class="space5"></div>
        % if (!defined $parent) {
          0 <span class="muted">parent</span>
        % } elsif (@$parents == 1) {
          1 <span class="muted">parent</span>
          <a class="font-black" href="<%= url_for("/$user/$project/commit/$parent") %>">
            <%= substr($parent, 0, 7) %>
          </a>
        % } else {
          <%= @$parents %> <span class="muted">parents</span>:
          % for my $parent (@$parents) {
            <a class="font-black" href="<%= url_for("/$user/$project/commit/$parent") %>">
              <%= substr($parent, 0, 7) %>
            </a>
          % }
        % }
        <span class="muted">commit</span> <%= $commit->{id} %>
      </div>
    </div>
    
    <%= include '/include/difftree', id => $commit->{id}, from_id => $commit->{parent},
      difftrees => $difftrees, parents => $commit->{parents}, project_ns => $project %>
    
    <div>
      % for (my $i = 0; $i < @$blobdiffs; $i++) {
        % my $blob_diff = $blobdiffs->[$i];
        <div>
          % my $lines = $blob_diff->{lines};
          % my $file = $blob_diff->{file};
          % my $from_file = $blob_diff->{from_file};
          % $from_file = $file unless defined $from_file;
          % my $status = $blob_diff->{status};
          %= include '/include/blobdiff_body', file => $file, from_file => $from_file, status => $status, lines => $blob_diff->{lines}, project_ns => $project;
        </div>
      % }
    </div>
  </div>
  
  %= include '/include/footer';
