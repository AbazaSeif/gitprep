<%
  # API
  my $api = Gitprep::API->new($self);
  
  my $user = param('user');
  my $repository = param('repository');

  my $root_ns = $api->root_ns(config->{root});
  
  # Parameters
  my $project_ns = "$root_ns/$user/$repository.git";
  my $project = "/$project_ns";
  my $home_ns = $api->dirname($project_ns);
  my $home = "/$home_ns";
  my $id_dir = param('id_dir');

  # Id and directory
  my ($id, $dir) = $api->parse_id_path($project, $id_dir);

  # Git
  my $git = $self->app->git;
  
  # Tree id
  my $tid;
  my $commit = $git->parse_commit($project, $id);
  unless (defined $tid) {
    if (defined $dir && $dir ne '') {
      $tid = $git->id_by_path($project, $id, $dir, 'tree');
    }
    else { $tid = $commit->{tree} }
  }
  $self->render_not_found unless defined $tid;

  # Get tree (command "git ls-tree")
  my @entries = ();
  my $show_sizes = 0;
  open my $fh, '-|', $git->cmd($project), 'ls-tree', '-z',
      ($show_sizes ? '-l' : ()), $tid
    or $api->croak('Open git-ls-tree failed');
  {
    local $/ = "\0";
    @entries = map { chomp; $git->dec($_) } <$fh>;
  }
  close $fh
    or $api->croak(404, "Reading tree failed");
  
  # Parse tree
  my $trees = [];
  for my $line (@entries) {
    my $tree = $git->parse_ls_tree_line($line, -z => 1, -l => $show_sizes);
    $tree->{mode_str} = $git->_mode_str($tree->{mode});
    push @$trees, $tree;
  }
  
  # References
  my $refs = $git->references($project);

%>

% layout 'common';
  %= include '/include/header', title => 'Tree', project => $project;
  %= include '/include/current_directory', home_ns => $home_ns, home => $home;

  <div class="page_nav">
    <a title="in format: tar.gz" rel="nofollow"
        href="<%= url_for('snapshot', project => $project_ns, id => $id) %>">
      snapshot
    </a>
  </div>

  <div class="header">
    <a class="title" href="<%= url_for('commit', project => $project_ns, id => $id) %>">
      <%= $commit->{title} %>
    </a>
  </div>

  %= include '/include/page_path', project => $project, project_ns => $project_ns, id => $id, Path => $dir, type => 'tree';

  <div class="page_body">
    %= include 'include/refs', project_ns => $project_ns, project => $project_ns, commit => $commit, refs => $refs;
    <table class="tree">
      % for (my $i = 0; $i <@$trees; $i++) {
        
        % my $tree = $trees->[$i];
        % my $type = $tree->{type};
        % my $name = $tree->{name};
        
        % my $child_dir = defined $dir && length $dir ? join('/', $dir, $name) : $name;
        <tr class="<%= $i % 2 ? 'light' : 'dark' %>">
          <td class="mode">
            <%= $tree->{mode_str} %>
          </td>
          % my $file = defined $dir ? "$dir/$name" : $name;
          % $file =~ s/^\///;
          
          <td class="list">
            % if ($type eq 'blob') {
              <a class="list" href="<%= url_for('blob', project => $project_ns, id_file => "$id/$file") %>">
                <%= $name %>
              </a>
            % } elsif ($tree) {
              <a href="<%= url_for('tree', project => $project_ns, id_dir => "$id/$child_dir") %>">
                <%= $name %>
              </a>
            % }
          </td>
          <td class="link">
            % if ($type eq 'blob') {
              <a href="<%= url_for('blob', project => $project_ns, id_file => "$id/$file") %>">
                blob
              </a>
              |
              <a href="<%= url_for('blob_plain', project => $project_ns, id_file => "$id/$file") %>">
                raw
              </a>
            % } elsif ($type eq 'tree') {
              <a href="<%= url_for('tree', project => $project_ns, id_dir => "$id/$child_dir") %>">
                tree
              </a>
            % }
          </td>
        </tr>
      % }
    </table>
  </div>